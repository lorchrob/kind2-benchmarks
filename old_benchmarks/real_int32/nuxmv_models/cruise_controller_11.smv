
MODULE main () 
VAR
	top-usr-onOff : boolean;
	top-usr-decelSet : boolean;
	top-usr-accelResume : boolean;
	top-usr-cancel : boolean;
	top-usr-brakePedal : boolean;
	top-usr-carGear : signed word[32];
	top-usr-carSpeed : real;
	top-usr-validInputs : boolean;
	top-usr-OK : boolean;
	top-impl-usr-mode : signed word[32];
	top-impl-usr-cruiseThrottle : real;
	top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeDecreaseInDesiredSpeed_rlt_clock : boolean;
	top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeDecreaseInDesiredSpeed_rlt_init_step : boolean;
	top-impl-usr-newDesiredSpeed1 : real;
	top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeIncreaseInDesiredSpeed_rlt_clock : boolean;
	top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeIncreaseInDesiredSpeed_rlt_init_step : boolean;
	top-impl-usr-newDesiredSpeed : real;
	top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_onOff : signed word[32];
	top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_decel : signed word[32];
	top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_set : signed word[32];
	top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_accel : signed word[32];
	top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_safetyCondition : signed word[32];
	top-impl-usr-chart_CruiseController_ModeLogic_mode_logic____wakeup___ : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_outports_setDesiredSpeed : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_1 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_1 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_outports_mode : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_outports_setDesiredSpeed : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_5_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_2 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_2 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_outports_mode : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_7_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_3 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_3 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_outports_mode : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_outports_mode : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_4 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_10_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_15_states___root : signed word[32];
	top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root2 : signed word[32];
	top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_02 : boolean;
	top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root2 : signed word[32];
	top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root1 : signed word[32];
	top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_01 : boolean;
	top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root1 : signed word[32];
	top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root : signed word[32];
	top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0 : boolean;
	top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_2_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_1 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_1 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_4_outports_mode : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_5_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_2 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_2 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_outports_mode : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_7_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_3 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_3 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_8_outports_mode : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_outports_setDesiredSpeed : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_outports_mode : signed word[32];
	top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root : signed word[32];
	top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0 : boolean;
	top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_0 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_1_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_outports_setDesiredSpeed : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_1 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_complete_1 : boolean;
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_outports_mode : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root : signed word[32];
	top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_outports_mode : signed word[32];
	top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_rlt_state_2_states___root : signed word[32];
	top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_rlt_evtInitStep : boolean;
	top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root : signed word[32];
	top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_mode : signed word[32];
	top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_setDesiredSpeed : signed word[32];
	top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_final_state_states___root : signed word[32];
	top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_setDesiredSpeed : signed word[32];
	top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetAccel_Bounded_Count_Out : signed word[32];
	top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetDecel_Bounded_Count_Out : signed word[32];
	top-impl-usr-cruise_controller_CruiseController_ModeLogic_resumeEvent_Out : boolean;
	top-impl-usr-cruise_controller_CruiseController_ModeLogic_safetyCondition_safetyCondition : boolean;
	top-impl-usr-cruise_controller_CruiseController_ModeLogic_setEvent_Out : boolean;
	top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed : boolean;
	top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed : real;
	top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_GOTOL_prevDesiredSpeed : real;
	top-impl-usr-cruise_controller_CruiseController_SetThrottle_cruiseThrottlePrevPlusDelta : real;

ASSIGN
	init(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_GOTOL_prevDesiredSpeed) := 0;
	init(top-impl-usr-cruise_controller_CruiseController_ModeLogic_setEvent_Out) := FALSE;
	init(top-impl-usr-cruise_controller_CruiseController_ModeLogic_safetyCondition_safetyCondition) := ((((!top-usr-cancel & !top-usr-brakePedal) & ((top-usr-carGear = 0sh32_00000003) ? TRUE : FALSE)) & ((top-usr-carSpeed >= 15) ? TRUE : FALSE)) & top-usr-validInputs);
	init(top-impl-usr-cruise_controller_CruiseController_ModeLogic_resumeEvent_Out) := FALSE;
	init(top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetDecel_Bounded_Count_Out) := ((((0sh32_00000000 >= (top-usr-decelSet ? 0sh32_00000001 : 0sh32_00000000)) ? 0sh32_00000000 : (top-usr-decelSet ? 0sh32_00000001 : 0sh32_00000000)) <= 0sh32_00000014) ? ((0sh32_00000000 >= (top-usr-decelSet ? 0sh32_00000001 : 0sh32_00000000)) ? 0sh32_00000000 : (top-usr-decelSet ? 0sh32_00000001 : 0sh32_00000000)) : 0sh32_00000014);
	init(top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetAccel_Bounded_Count_Out) := ((((0sh32_00000000 >= (top-usr-accelResume ? 0sh32_00000001 : 0sh32_00000000)) ? 0sh32_00000000 : (top-usr-accelResume ? 0sh32_00000001 : 0sh32_00000000)) <= 0sh32_00000014) ? ((0sh32_00000000 >= (top-usr-accelResume ? 0sh32_00000001 : 0sh32_00000000)) ? 0sh32_00000000 : (top-usr-accelResume ? 0sh32_00000001 : 0sh32_00000000)) : 0sh32_00000014);
	init(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_mode) := 0sh32_00000000;
	init(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root) := 0sh32_00000000;
	init(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_rlt_evtInitStep) := TRUE;
	init(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_onOff) := (!top-usr-onOff ? 0sh32_00000000 : 0sh32_00000001);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_0) := (((top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root >= 0sh32_00000002) & (top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root <= 0sh32_00000008)) & !(!(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_onOff = 0sh32_00000000) ? TRUE : FALSE));
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_1_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_0 ? (((top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root >= 0sh32_00000002) & (top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root <= 0sh32_00000008)) ? 0sh32_00000000 : top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root) : top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_outports_mode) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_0 ? (!(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_1_states___root = 0sh32_00000001) ? 0sh32_00000001 : top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_mode) : top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_mode);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_0 ? (!(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_1_states___root = 0sh32_00000001) ? 0sh32_00000001 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_1_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_1_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_1) := ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_states___root = 0sh32_00000001) & ((!(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_onOff = 0sh32_00000000) ? TRUE : FALSE) & !top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_0));
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_1 ? ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_states___root = 0sh32_00000001) ? 0sh32_00000000 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_states___root);
	init(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root) := (!((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_states___root >= 0sh32_00000002) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_states___root <= 0sh32_00000008)) ? 0sh32_00000002 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_states___root);
	init(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0) := (!((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_states___root >= 0sh32_00000002) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_states___root <= 0sh32_00000008)) & ((top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root >= 0sh32_00000002) & (top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root <= 0sh32_00000008)));
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_outports_mode) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_1 ? (top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0 ? (!(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root = 0sh32_00000007) ? 0sh32_00000002 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_outports_mode) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_outports_mode) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_outports_mode);
	init(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root) := (top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0 ? (!(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root = 0sh32_00000007) ? 0sh32_00000007 : top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root) : top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_1 ? top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_complete_1) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_0 | top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_1);
	init(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_safetyCondition) := (!top-impl-usr-cruise_controller_CruiseController_ModeLogic_safetyCondition_safetyCondition ? 0sh32_00000000 : 0sh32_00000001);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0) := (((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root >= 0sh32_00000003) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root <= 0sh32_00000006)) & !(!(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_safetyCondition = 0sh32_00000000) ? TRUE : FALSE));
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0 ? (((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root >= 0sh32_00000003) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root <= 0sh32_00000006)) ? 0sh32_00000002 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_2_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0 ? (!(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root = 0sh32_00000008) ? 0sh32_00000008 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root);
	init(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_set) := (!top-impl-usr-cruise_controller_CruiseController_ModeLogic_setEvent_Out ? 0sh32_00000000 : 0sh32_00000001);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_1) := ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_2_states___root = 0sh32_00000008) & (((!((!(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_set = 0sh32_00000001) ? 0sh32_00000000 : 0sh32_00000001) = 0sh32_00000000) ? TRUE : FALSE) & (!((!(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_safetyCondition = 0sh32_00000001) ? 0sh32_00000000 : 0sh32_00000001) = 0sh32_00000000) ? TRUE : FALSE)) & !top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0));
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_1 ? ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_2_states___root = 0sh32_00000008) ? 0sh32_00000002 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_2_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_2_states___root);
	init(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root) := (!((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root >= 0sh32_00000003) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root <= 0sh32_00000006)) ? 0sh32_00000003 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root);
	init(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0) := (!((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root >= 0sh32_00000003) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root <= 0sh32_00000006)) & ((top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root >= 0sh32_00000003) & (top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root <= 0sh32_00000006)));
	init(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root) := (top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0 ? (!(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root = 0sh32_00000004) ? 0sh32_00000004 : top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root) : top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_5_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_1 ? top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_1) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0 | top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_1);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_2) := ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_5_states___root = 0sh32_00000008) & (((!((!((!top-impl-usr-cruise_controller_CruiseController_ModeLogic_resumeEvent_Out ? 0sh32_00000000 : 0sh32_00000001) = 0sh32_00000001) ? 0sh32_00000000 : 0sh32_00000001) = 0sh32_00000000) ? TRUE : FALSE) & (!((!(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_safetyCondition = 0sh32_00000001) ? 0sh32_00000000 : 0sh32_00000001) = 0sh32_00000000) ? TRUE : FALSE)) & !top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_1));
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_2 ? ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_5_states___root = 0sh32_00000008) ? 0sh32_00000002 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_5_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_5_states___root);
	init(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root1) := (!((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_states___root >= 0sh32_00000003) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_states___root <= 0sh32_00000006)) ? 0sh32_00000003 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_states___root);
	init(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_01) := (!((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_states___root >= 0sh32_00000003) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_states___root <= 0sh32_00000006)) & ((top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root1 >= 0sh32_00000003) & (top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root1 <= 0sh32_00000006)));
	init(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root1) := (top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_01 ? (!(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root1 = 0sh32_00000004) ? 0sh32_00000004 : top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root1) : top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root1);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_7_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_2 ? top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root1 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_2) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_1 | top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_2);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_3) := ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_7_states___root = 0sh32_00000007) & (((!((!(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_set = 0sh32_00000001) ? 0sh32_00000000 : 0sh32_00000001) = 0sh32_00000000) ? TRUE : FALSE) & (!((!(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_safetyCondition = 0sh32_00000001) ? 0sh32_00000000 : 0sh32_00000001) = 0sh32_00000000) ? TRUE : FALSE)) & !top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_2));
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_3 ? ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_7_states___root = 0sh32_00000007) ? 0sh32_00000002 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_7_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_7_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_4_outports_mode) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0 ? (!(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root = 0sh32_00000008) ? 0sh32_00000003 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_outports_mode) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_outports_mode);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_outports_mode) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_1 ? (top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0 ? (!(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root = 0sh32_00000004) ? 0sh32_00000004 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_4_outports_mode) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_4_outports_mode) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_4_outports_mode);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_8_outports_mode) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_2 ? (top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_01 ? (!(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root1 = 0sh32_00000004) ? 0sh32_00000004 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_outports_mode) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_outports_mode) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_outports_mode);
	init(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root2) := (!((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_states___root >= 0sh32_00000003) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_states___root <= 0sh32_00000006)) ? 0sh32_00000003 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_states___root);
	init(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_02) := (!((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_states___root >= 0sh32_00000003) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_states___root <= 0sh32_00000006)) & ((top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root2 >= 0sh32_00000003) & (top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root2 <= 0sh32_00000006)));
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_outports_mode) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_3 ? (top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_02 ? (!(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root2 = 0sh32_00000004) ? 0sh32_00000004 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_8_outports_mode) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_8_outports_mode) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_8_outports_mode);
	init(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root2) := (top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_02 ? (!(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root2 = 0sh32_00000004) ? 0sh32_00000004 : top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root2) : top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root2);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_3 ? top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root2 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_3) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_2 | top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_3);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0) := ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root = 0sh32_00000004) & (top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_set = 0sh32_00000001));
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0 ? ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root = 0sh32_00000004) ? 0sh32_00000003 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0 ? (!(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_states___root = 0sh32_00000004) ? 0sh32_00000004 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_states___root);
	init(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_accel) := (!((top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetAccel_Bounded_Count_Out = 0sh32_00000014) ? TRUE : FALSE) ? 0sh32_00000000 : 0sh32_00000001);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_1) := ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root = 0sh32_00000004) & ((top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_accel = 0sh32_00000001) & !top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0));
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_1 ? ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root = 0sh32_00000004) ? 0sh32_00000003 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_5_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_1 ? (!(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_states___root = 0sh32_00000005) ? 0sh32_00000005 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_1) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0 | top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_1);
	init(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_decel) := (!((top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetDecel_Bounded_Count_Out = 0sh32_00000014) ? TRUE : FALSE) ? 0sh32_00000000 : 0sh32_00000001);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_2) := ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_5_states___root = 0sh32_00000004) & ((top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_decel = 0sh32_00000001) & !top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_1));
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_2 ? ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_5_states___root = 0sh32_00000004) ? 0sh32_00000003 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_5_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_5_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_7_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_2 ? (!(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_states___root = 0sh32_00000006) ? 0sh32_00000006 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_2) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_1 | top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_2);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_3) := ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_7_states___root = 0sh32_00000006) & ((top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_decel = 0sh32_00000000) & !top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_2));
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_3 ? ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_7_states___root = 0sh32_00000006) ? 0sh32_00000003 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_7_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_7_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_3 ? (!(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_states___root = 0sh32_00000004) ? 0sh32_00000004 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_3) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_2 | top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_3);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_4) := ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_states___root = 0sh32_00000005) & ((top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_accel = 0sh32_00000000) & !top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_3));
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_10_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_4 ? ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_states___root = 0sh32_00000005) ? 0sh32_00000003 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_outports_mode) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0 ? (!(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_states___root = 0sh32_00000004) ? 0sh32_00000004 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_outports_mode) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_outports_mode);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_outports_mode) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_1 ? (!(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_states___root = 0sh32_00000005) ? 0sh32_00000006 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_outports_mode) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_outports_mode);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_outports_mode) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_2 ? (!(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_states___root = 0sh32_00000006) ? 0sh32_00000005 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_outports_mode) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_outports_mode);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_outports_mode) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_3 ? (!(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_states___root = 0sh32_00000004) ? 0sh32_00000004 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_outports_mode) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_outports_mode);
	init(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic____wakeup___) := TRUE;
	init(top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeIncreaseInDesiredSpeed_rlt_init_step) := TRUE;
	init(top-impl-usr-mode) := (top-impl-usr-chart_CruiseController_ModeLogic_mode_logic____wakeup___ ? (top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_rlt_evtInitStep ? (!(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root = 0sh32_00000001) ? 0sh32_00000001 : top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_mode) : ((!top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_complete_1 & ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root >= 0sh32_00000002) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root <= 0sh32_00000008))) ? ((!top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_3 & ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root >= 0sh32_00000003) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root <= 0sh32_00000006))) ? (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_4 ? (!(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_10_states___root = 0sh32_00000004) ? 0sh32_00000004 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_outports_mode) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_outports_mode) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_outports_mode) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_outports_mode)) : top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_mode);
	init(top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeIncreaseInDesiredSpeed_rlt_clock) := ((top-impl-usr-mode = 0sh32_00000006) ? TRUE : FALSE);
	init(top-impl-usr-newDesiredSpeed) := ((top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeIncreaseInDesiredSpeed_rlt_init_step & !top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeIncreaseInDesiredSpeed_rlt_clock) ? 0 : top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_GOTOL_prevDesiredSpeed + 1/20);
	init(top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeDecreaseInDesiredSpeed_rlt_init_step) := TRUE;
	init(top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeDecreaseInDesiredSpeed_rlt_clock) := ((top-impl-usr-mode = 0sh32_00000005) ? TRUE : FALSE);
	init(top-impl-usr-newDesiredSpeed1) := ((top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeDecreaseInDesiredSpeed_rlt_init_step & !top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeDecreaseInDesiredSpeed_rlt_clock) ? 0 : (top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_GOTOL_prevDesiredSpeed - 1/20));
	init(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed) := (((top-impl-usr-mode = 0sh32_00000006) ? TRUE : FALSE) ? top-impl-usr-newDesiredSpeed : (((top-impl-usr-mode = 0sh32_00000005) ? TRUE : FALSE) ? top-impl-usr-newDesiredSpeed1 : (((top-impl-usr-mode = 0sh32_00000004) ? TRUE : FALSE) ? top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_GOTOL_prevDesiredSpeed : (((top-impl-usr-mode = 0sh32_00000003) ? TRUE : FALSE) ? top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_GOTOL_prevDesiredSpeed : 0))));
	init(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_setDesiredSpeed) := 0sh32_00000000;
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_outports_setDesiredSpeed) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_0 ? (((top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root >= 0sh32_00000002) & (top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root <= 0sh32_00000008)) ? (((top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root >= 0sh32_00000003) & (top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root <= 0sh32_00000006)) ? ((top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root = 0sh32_00000004) ? 0sh32_00000000 : top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_setDesiredSpeed) : top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_setDesiredSpeed) : top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_setDesiredSpeed) : top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_setDesiredSpeed);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_outports_setDesiredSpeed) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_3 ? 0sh32_00000001 : (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_1 ? 0sh32_00000001 : (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0 ? (((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root >= 0sh32_00000003) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root <= 0sh32_00000006)) ? ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root = 0sh32_00000004) ? 0sh32_00000000 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_outports_setDesiredSpeed) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_outports_setDesiredSpeed) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_outports_setDesiredSpeed)));
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_15_states___root) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_4 ? (!(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_10_states___root = 0sh32_00000004) ? 0sh32_00000004 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_10_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_10_states___root);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_outports_setDesiredSpeed) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0 ? 0sh32_00000001 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_outports_setDesiredSpeed);
	init(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_outports_setDesiredSpeed) := (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_1 ? ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root = 0sh32_00000004) ? 0sh32_00000000 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_outports_setDesiredSpeed) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_outports_setDesiredSpeed);
	init(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_setDesiredSpeed) := (top-impl-usr-chart_CruiseController_ModeLogic_mode_logic____wakeup___ ? (top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_rlt_evtInitStep ? top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_setDesiredSpeed : ((!top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_complete_1 & ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root >= 0sh32_00000002) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root <= 0sh32_00000008))) ? ((!top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_3 & ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root >= 0sh32_00000003) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root <= 0sh32_00000006))) ? ((!(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_3 | top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_4) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_15_states___root = 0sh32_00000004)) ? 0sh32_00000000 : (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_2 ? ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_5_states___root = 0sh32_00000004) ? 0sh32_00000000 : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_outports_setDesiredSpeed) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_outports_setDesiredSpeed)) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_outports_setDesiredSpeed) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_outports_setDesiredSpeed)) : top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_setDesiredSpeed);
	init(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed) := (!(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_setDesiredSpeed = 0sh32_00000000) ? TRUE : FALSE);
	init(top-impl-usr-cruise_controller_CruiseController_SetThrottle_cruiseThrottlePrevPlusDelta) := ((((((((top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed ? top-usr-carSpeed : top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed) < 0) ? 0 : (((top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed ? top-usr-carSpeed : top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed) > 100) ? 100 : (top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed ? top-usr-carSpeed : top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed))) - top-usr-carSpeed) * 1) < -10) ? -10 : (((((((top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed ? top-usr-carSpeed : top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed) < 0) ? 0 : (((top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed ? top-usr-carSpeed : top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed) > 100) ? 100 : (top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed ? top-usr-carSpeed : top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed))) - top-usr-carSpeed) * 1) > 10) ? 10 : (((((top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed ? top-usr-carSpeed : top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed) < 0) ? 0 : (((top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed ? top-usr-carSpeed : top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed) > 100) ? 100 : (top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed ? top-usr-carSpeed : top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed))) - top-usr-carSpeed) * 1))) / 20) + 0;
	init(top-impl-usr-cruiseThrottle) := ((((top-impl-usr-mode = 0sh32_00000006) ? TRUE : FALSE) | (((top-impl-usr-mode = 0sh32_00000005) ? TRUE : FALSE) | ((top-impl-usr-mode = 0sh32_00000004) ? TRUE : FALSE))) ? ((top-impl-usr-cruise_controller_CruiseController_SetThrottle_cruiseThrottlePrevPlusDelta < 0) ? 0 : ((top-impl-usr-cruise_controller_CruiseController_SetThrottle_cruiseThrottlePrevPlusDelta > 100) ? 100 : top-impl-usr-cruise_controller_CruiseController_SetThrottle_cruiseThrottlePrevPlusDelta)) : 0);
	init(top-usr-OK) := ((top-impl-usr-cruiseThrottle = 0) | ((top-impl-usr-mode = 0sh32_00000006) | ((top-impl-usr-mode = 0sh32_00000005) | (top-impl-usr-mode = 0sh32_00000004))));
	init(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_rlt_state_2_states___root) := (!(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root = 0sh32_00000001) ? 0sh32_00000001 : top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root);
	init(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_final_state_states___root) := (top-impl-usr-chart_CruiseController_ModeLogic_mode_logic____wakeup___ ? (top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_rlt_evtInitStep ? top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_rlt_state_2_states___root : ((!top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_complete_1 & ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root >= 0sh32_00000002) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root <= 0sh32_00000008))) ? ((!top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_3 & ((top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root >= 0sh32_00000003) & (top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root <= 0sh32_00000006))) ? top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_15_states___root : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root) : top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root)) : top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root);

	next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_GOTOL_prevDesiredSpeed) := (((top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed ? top-usr-carSpeed : top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed) < 0) ? 0 : (((top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed ? top-usr-carSpeed : top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed) > 100) ? 100 : (top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed ? top-usr-carSpeed : top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed)));
	next(top-impl-usr-cruise_controller_CruiseController_ModeLogic_setEvent_Out) := (!top-usr-decelSet & next(top-usr-decelSet));
	next(top-impl-usr-cruise_controller_CruiseController_ModeLogic_safetyCondition_safetyCondition) := ((((!next(top-usr-cancel) & !next(top-usr-brakePedal)) & ((next(top-usr-carGear) = 0sh32_00000003) ? TRUE : FALSE)) & ((next(top-usr-carSpeed) >= 15) ? TRUE : FALSE)) & next(top-usr-validInputs));
	next(top-impl-usr-cruise_controller_CruiseController_ModeLogic_resumeEvent_Out) := (!top-usr-accelResume & next(top-usr-accelResume));
	next(top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetDecel_Bounded_Count_Out) := ((((0sh32_00000000 >= (next(top-usr-decelSet) ? (top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetDecel_Bounded_Count_Out + 0sh32_00000001) : 0sh32_00000000)) ? 0sh32_00000000 : (next(top-usr-decelSet) ? (top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetDecel_Bounded_Count_Out + 0sh32_00000001) : 0sh32_00000000)) <= 0sh32_00000014) ? ((0sh32_00000000 >= (next(top-usr-decelSet) ? (top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetDecel_Bounded_Count_Out + 0sh32_00000001) : 0sh32_00000000)) ? 0sh32_00000000 : (next(top-usr-decelSet) ? (top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetDecel_Bounded_Count_Out + 0sh32_00000001) : 0sh32_00000000)) : 0sh32_00000014);
	next(top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetAccel_Bounded_Count_Out) := ((((0sh32_00000000 >= (next(top-usr-accelResume) ? (top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetAccel_Bounded_Count_Out + 0sh32_00000001) : 0sh32_00000000)) ? 0sh32_00000000 : (next(top-usr-accelResume) ? (top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetAccel_Bounded_Count_Out + 0sh32_00000001) : 0sh32_00000000)) <= 0sh32_00000014) ? ((0sh32_00000000 >= (next(top-usr-accelResume) ? (top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetAccel_Bounded_Count_Out + 0sh32_00000001) : 0sh32_00000000)) ? 0sh32_00000000 : (next(top-usr-accelResume) ? (top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetAccel_Bounded_Count_Out + 0sh32_00000001) : 0sh32_00000000)) : 0sh32_00000014);
	next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_mode) := top-impl-usr-mode;
	next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root) := top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_final_state_states___root;
	next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_rlt_evtInitStep) := (top-impl-usr-chart_CruiseController_ModeLogic_mode_logic____wakeup___ ? FALSE : top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_rlt_evtInitStep);
	next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_onOff) := (!next(top-usr-onOff) ? 0sh32_00000000 : 0sh32_00000001);
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_0) := (((next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root) >= 0sh32_00000002) & (next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root) <= 0sh32_00000008)) & !(!(next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_onOff) = 0sh32_00000000) ? TRUE : FALSE));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_1_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_0) ? (((next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root) >= 0sh32_00000002) & (next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root) <= 0sh32_00000008)) ? 0sh32_00000000 : next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root)) : next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_outports_mode) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_0) ? (!(next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_1_states___root) = 0sh32_00000001) ? 0sh32_00000001 : next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_mode)) : next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_mode));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_0) ? (!(next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_1_states___root) = 0sh32_00000001) ? 0sh32_00000001 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_1_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_1_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_1) := ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_states___root) = 0sh32_00000001) & ((!(next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_onOff) = 0sh32_00000000) ? TRUE : FALSE) & !next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_0)));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_1) ? ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_states___root) = 0sh32_00000001) ? 0sh32_00000000 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_states___root));
	next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root) := (!((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_states___root) >= 0sh32_00000002) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_states___root) <= 0sh32_00000008)) ? 0sh32_00000002 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_states___root));
	next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0) := (!((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_states___root) >= 0sh32_00000002) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_states___root) <= 0sh32_00000008)) & ((next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root) >= 0sh32_00000002) & (next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root) <= 0sh32_00000008)));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_outports_mode) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_1) ? (next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0) ? (!(next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root) = 0sh32_00000007) ? 0sh32_00000002 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_outports_mode)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_outports_mode)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_outports_mode));
	next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root) := (next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0) ? (!(next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root) = 0sh32_00000007) ? 0sh32_00000007 : next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root)) : next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_1) ? next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_3_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_complete_1) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_0) | next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_1));
	next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_safetyCondition) := (!next(top-impl-usr-cruise_controller_CruiseController_ModeLogic_safetyCondition_safetyCondition) ? 0sh32_00000000 : 0sh32_00000001);
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0) := (((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root) >= 0sh32_00000003) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root) <= 0sh32_00000006)) & !(!(next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_safetyCondition) = 0sh32_00000000) ? TRUE : FALSE));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0) ? (((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root) >= 0sh32_00000003) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root) <= 0sh32_00000006)) ? 0sh32_00000002 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_2_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0) ? (!(next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root) = 0sh32_00000008) ? 0sh32_00000008 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root));
	next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_set) := (!next(top-impl-usr-cruise_controller_CruiseController_ModeLogic_setEvent_Out) ? 0sh32_00000000 : 0sh32_00000001);
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_1) := ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_2_states___root) = 0sh32_00000008) & (((!((!(next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_set) = 0sh32_00000001) ? 0sh32_00000000 : 0sh32_00000001) = 0sh32_00000000) ? TRUE : FALSE) & (!((!(next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_safetyCondition) = 0sh32_00000001) ? 0sh32_00000000 : 0sh32_00000001) = 0sh32_00000000) ? TRUE : FALSE)) & !next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0)));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_1) ? ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_2_states___root) = 0sh32_00000008) ? 0sh32_00000002 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_2_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_2_states___root));
	next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root) := (!((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root) >= 0sh32_00000003) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root) <= 0sh32_00000006)) ? 0sh32_00000003 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root));
	next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0) := (!((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root) >= 0sh32_00000003) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root) <= 0sh32_00000006)) & ((next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root) >= 0sh32_00000003) & (next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root) <= 0sh32_00000006)));
	next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root) := (next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0) ? (!(next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root) = 0sh32_00000004) ? 0sh32_00000004 : next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root)) : next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_5_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_1) ? next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_3_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_1) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0) | next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_1));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_2) := ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_5_states___root) = 0sh32_00000008) & (((!((!((!next(top-impl-usr-cruise_controller_CruiseController_ModeLogic_resumeEvent_Out) ? 0sh32_00000000 : 0sh32_00000001) = 0sh32_00000001) ? 0sh32_00000000 : 0sh32_00000001) = 0sh32_00000000) ? TRUE : FALSE) & (!((!(next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_safetyCondition) = 0sh32_00000001) ? 0sh32_00000000 : 0sh32_00000001) = 0sh32_00000000) ? TRUE : FALSE)) & !next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_1)));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_2) ? ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_5_states___root) = 0sh32_00000008) ? 0sh32_00000002 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_5_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_5_states___root));
	next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root1) := (!((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_states___root) >= 0sh32_00000003) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_states___root) <= 0sh32_00000006)) ? 0sh32_00000003 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_states___root));
	next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_01) := (!((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_states___root) >= 0sh32_00000003) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_states___root) <= 0sh32_00000006)) & ((next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root1) >= 0sh32_00000003) & (next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root1) <= 0sh32_00000006)));
	next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root1) := (next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_01) ? (!(next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root1) = 0sh32_00000004) ? 0sh32_00000004 : next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root1)) : next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root1));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_7_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_2) ? next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root1) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_2) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_1) | next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_2));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_3) := ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_7_states___root) = 0sh32_00000007) & (((!((!(next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_set) = 0sh32_00000001) ? 0sh32_00000000 : 0sh32_00000001) = 0sh32_00000000) ? TRUE : FALSE) & (!((!(next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_safetyCondition) = 0sh32_00000001) ? 0sh32_00000000 : 0sh32_00000001) = 0sh32_00000000) ? TRUE : FALSE)) & !next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_2)));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_3) ? ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_7_states___root) = 0sh32_00000007) ? 0sh32_00000002 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_7_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_7_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_4_outports_mode) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0) ? (!(next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_1_states___root) = 0sh32_00000008) ? 0sh32_00000003 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_outports_mode)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_outports_mode));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_outports_mode) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_1) ? (next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0) ? (!(next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root) = 0sh32_00000004) ? 0sh32_00000004 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_4_outports_mode)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_4_outports_mode)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_4_outports_mode));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_8_outports_mode) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_2) ? (next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_01) ? (!(next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root1) = 0sh32_00000004) ? 0sh32_00000004 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_outports_mode)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_outports_mode)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_6_outports_mode));
	next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root2) := (!((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_states___root) >= 0sh32_00000003) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_states___root) <= 0sh32_00000006)) ? 0sh32_00000003 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_states___root));
	next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_02) := (!((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_states___root) >= 0sh32_00000003) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_states___root) <= 0sh32_00000006)) & ((next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root2) >= 0sh32_00000003) & (next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root2) <= 0sh32_00000006)));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_outports_mode) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_3) ? (next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_02) ? (!(next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root2) = 0sh32_00000004) ? 0sh32_00000004 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_8_outports_mode)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_8_outports_mode)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_8_outports_mode));
	next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root2) := (next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_02) ? (!(next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root2) = 0sh32_00000004) ? 0sh32_00000004 : next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root2)) : next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_1_states___root2));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_3) ? next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root2) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_3) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_2) | next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_3));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0) := ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root) = 0sh32_00000004) & (next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_set) = 0sh32_00000001));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0) ? ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root) = 0sh32_00000004) ? 0sh32_00000003 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0) ? (!(next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_states___root) = 0sh32_00000004) ? 0sh32_00000004 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_states___root));
	next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_accel) := (!((next(top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetAccel_Bounded_Count_Out) = 0sh32_00000014) ? TRUE : FALSE) ? 0sh32_00000000 : 0sh32_00000001);
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_1) := ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root) = 0sh32_00000004) & ((next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_accel) = 0sh32_00000001) & !next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0)));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_1) ? ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root) = 0sh32_00000004) ? 0sh32_00000003 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_5_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_1) ? (!(next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_states___root) = 0sh32_00000005) ? 0sh32_00000005 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_1) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0) | next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_1));
	next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_decel) := (!((next(top-impl-usr-cruise_controller_CruiseController_ModeLogic_DelayOnsetDecel_Bounded_Count_Out) = 0sh32_00000014) ? TRUE : FALSE) ? 0sh32_00000000 : 0sh32_00000001);
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_2) := ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_5_states___root) = 0sh32_00000004) & ((next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_decel) = 0sh32_00000001) & !next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_1)));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_2) ? ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_5_states___root) = 0sh32_00000004) ? 0sh32_00000003 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_5_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_5_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_7_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_2) ? (!(next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_states___root) = 0sh32_00000006) ? 0sh32_00000006 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_2) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_1) | next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_2));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_3) := ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_7_states___root) = 0sh32_00000006) & ((next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_decel) = 0sh32_00000000) & !next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_2)));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_3) ? ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_7_states___root) = 0sh32_00000006) ? 0sh32_00000003 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_7_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_7_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_3) ? (!(next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_states___root) = 0sh32_00000004) ? 0sh32_00000004 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_3) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_2) | next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_3));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_4) := ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_states___root) = 0sh32_00000005) & ((next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_accel) = 0sh32_00000000) & !next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_3)));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_10_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_4) ? ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_states___root) = 0sh32_00000005) ? 0sh32_00000003 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_outports_mode) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0) ? (!(next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_states___root) = 0sh32_00000004) ? 0sh32_00000004 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_outports_mode)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_outports_mode));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_outports_mode) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_1) ? (!(next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_states___root) = 0sh32_00000005) ? 0sh32_00000006 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_outports_mode)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_outports_mode));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_outports_mode) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_2) ? (!(next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_states___root) = 0sh32_00000006) ? 0sh32_00000005 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_outports_mode)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_6_outports_mode));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_outports_mode) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_3) ? (!(next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_states___root) = 0sh32_00000004) ? 0sh32_00000004 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_outports_mode)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_8_outports_mode));
	next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic____wakeup___) := TRUE;
	next(top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeIncreaseInDesiredSpeed_rlt_init_step) := (top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeIncreaseInDesiredSpeed_rlt_clock ? FALSE : top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeIncreaseInDesiredSpeed_rlt_init_step);
	next(top-impl-usr-mode) := (next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic____wakeup___) ? (next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_rlt_evtInitStep) ? (!(next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root) = 0sh32_00000001) ? 0sh32_00000001 : next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_mode)) : ((!next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_complete_1) & ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root) >= 0sh32_00000002) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root) <= 0sh32_00000008))) ? ((!next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_3) & ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root) >= 0sh32_00000003) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root) <= 0sh32_00000006))) ? (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_4) ? (!(next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_10_states___root) = 0sh32_00000004) ? 0sh32_00000004 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_outports_mode)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_9_outports_mode)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_outports_mode)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_outports_mode))) : next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_mode));
	next(top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeIncreaseInDesiredSpeed_rlt_clock) := ((next(top-impl-usr-mode) = 0sh32_00000006) ? TRUE : FALSE);
	next(top-impl-usr-newDesiredSpeed) := ((next(top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeIncreaseInDesiredSpeed_rlt_init_step) & !next(top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeIncreaseInDesiredSpeed_rlt_clock)) ? 0 : (next(top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeIncreaseInDesiredSpeed_rlt_clock) ? next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_GOTOL_prevDesiredSpeed) + 1/20 : top-impl-usr-newDesiredSpeed));
	next(top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeDecreaseInDesiredSpeed_rlt_init_step) := (top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeDecreaseInDesiredSpeed_rlt_clock ? FALSE : top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeDecreaseInDesiredSpeed_rlt_init_step);
	next(top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeDecreaseInDesiredSpeed_rlt_clock) := ((next(top-impl-usr-mode) = 0sh32_00000005) ? TRUE : FALSE);
	next(top-impl-usr-newDesiredSpeed1) := ((next(top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeDecreaseInDesiredSpeed_rlt_init_step) & !next(top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeDecreaseInDesiredSpeed_rlt_clock)) ? 0 : (next(top-impl-usr-rlt_condact_cruise_controller_CruiseController_SetDesiredSpeed_computeDecreaseInDesiredSpeed_rlt_clock) ? (next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_GOTOL_prevDesiredSpeed) - 1/20) : top-impl-usr-newDesiredSpeed1));
	next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed) := (((next(top-impl-usr-mode) = 0sh32_00000006) ? TRUE : FALSE) ? next(top-impl-usr-newDesiredSpeed) : (((next(top-impl-usr-mode) = 0sh32_00000005) ? TRUE : FALSE) ? next(top-impl-usr-newDesiredSpeed1) : (((next(top-impl-usr-mode) = 0sh32_00000004) ? TRUE : FALSE) ? next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_GOTOL_prevDesiredSpeed) : (((next(top-impl-usr-mode) = 0sh32_00000003) ? TRUE : FALSE) ? next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_GOTOL_prevDesiredSpeed) : 0))));
	next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_setDesiredSpeed) := top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_setDesiredSpeed;
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_outports_setDesiredSpeed) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_fired_0) ? (((next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root) >= 0sh32_00000002) & (next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root) <= 0sh32_00000008)) ? (((next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root) >= 0sh32_00000003) & (next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root) <= 0sh32_00000006)) ? ((next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root) = 0sh32_00000004) ? 0sh32_00000000 : next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_setDesiredSpeed)) : next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_setDesiredSpeed)) : next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_setDesiredSpeed)) : next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_setDesiredSpeed));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_outports_setDesiredSpeed) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_3) ? 0sh32_00000001 : (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_1) ? 0sh32_00000001 : (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_fired_0) ? (((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root) >= 0sh32_00000003) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root) <= 0sh32_00000006)) ? ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root) = 0sh32_00000004) ? 0sh32_00000000 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_outports_setDesiredSpeed)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_outports_setDesiredSpeed)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_outports_setDesiredSpeed))));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_15_states___root) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_4) ? (!(next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_10_states___root) = 0sh32_00000004) ? 0sh32_00000004 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_10_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_10_states___root));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_outports_setDesiredSpeed) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_0) ? 0sh32_00000001 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_outports_setDesiredSpeed));
	next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_outports_setDesiredSpeed) := (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_1) ? ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_3_states___root) = 0sh32_00000004) ? 0sh32_00000000 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_outports_setDesiredSpeed)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_2_outports_setDesiredSpeed));
	next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_setDesiredSpeed) := (next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic____wakeup___) ? (next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_rlt_evtInitStep) ? next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_setDesiredSpeed) : ((!next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_complete_1) & ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root) >= 0sh32_00000002) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root) <= 0sh32_00000008))) ? ((!next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_3) & ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root) >= 0sh32_00000003) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root) <= 0sh32_00000006))) ? ((!(next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_complete_3) | next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_4)) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_15_states___root) = 0sh32_00000004)) ? 0sh32_00000000 : (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_fired_2) ? ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_5_states___root) = 0sh32_00000004) ? 0sh32_00000000 : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_outports_setDesiredSpeed)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_4_outports_setDesiredSpeed))) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_9_outports_setDesiredSpeed)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_2_outports_setDesiredSpeed))) : next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_outports_setDesiredSpeed));
	next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed) := (!(next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_setDesiredSpeed) = 0sh32_00000000) ? TRUE : FALSE);
	next(top-impl-usr-cruise_controller_CruiseController_SetThrottle_cruiseThrottlePrevPlusDelta) := ((((((((next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed) ? next(top-usr-carSpeed) : next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed)) < 0) ? 0 : (((next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed) ? next(top-usr-carSpeed) : next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed)) > 100) ? 100 : (next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed) ? next(top-usr-carSpeed) : next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed)))) - next(top-usr-carSpeed)) * 1) < -10) ? -10 : (((((((next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed) ? next(top-usr-carSpeed) : next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed)) < 0) ? 0 : (((next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed) ? next(top-usr-carSpeed) : next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed)) > 100) ? 100 : (next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed) ? next(top-usr-carSpeed) : next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed)))) - next(top-usr-carSpeed)) * 1) > 10) ? 10 : (((((next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed) ? next(top-usr-carSpeed) : next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed)) < 0) ? 0 : (((next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed) ? next(top-usr-carSpeed) : next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed)) > 100) ? 100 : (next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_setDesiredSpeed) ? next(top-usr-carSpeed) : next(top-impl-usr-cruise_controller_CruiseController_SetDesiredSpeed_IncreaseDesiredSpeed)))) - next(top-usr-carSpeed)) * 1))) / 20) + ((((top-impl-usr-mode = 0sh32_00000006) ? TRUE : FALSE) | (((top-impl-usr-mode = 0sh32_00000005) ? TRUE : FALSE) | ((top-impl-usr-mode = 0sh32_00000004) ? TRUE : FALSE))) ? ((top-impl-usr-cruise_controller_CruiseController_SetThrottle_cruiseThrottlePrevPlusDelta < 0) ? 0 : ((top-impl-usr-cruise_controller_CruiseController_SetThrottle_cruiseThrottlePrevPlusDelta > 100) ? 100 : top-impl-usr-cruise_controller_CruiseController_SetThrottle_cruiseThrottlePrevPlusDelta)) : 0);
	next(top-impl-usr-cruiseThrottle) := ((((next(top-impl-usr-mode) = 0sh32_00000006) ? TRUE : FALSE) | (((next(top-impl-usr-mode) = 0sh32_00000005) ? TRUE : FALSE) | ((next(top-impl-usr-mode) = 0sh32_00000004) ? TRUE : FALSE))) ? ((next(top-impl-usr-cruise_controller_CruiseController_SetThrottle_cruiseThrottlePrevPlusDelta) < 0) ? 0 : ((next(top-impl-usr-cruise_controller_CruiseController_SetThrottle_cruiseThrottlePrevPlusDelta) > 100) ? 100 : next(top-impl-usr-cruise_controller_CruiseController_SetThrottle_cruiseThrottlePrevPlusDelta))) : 0);
	next(top-usr-OK) := ((next(top-impl-usr-cruiseThrottle) = 0) | ((next(top-impl-usr-mode) = 0sh32_00000006) | ((next(top-impl-usr-mode) = 0sh32_00000005) | (next(top-impl-usr-mode) = 0sh32_00000004))));
	next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_rlt_state_2_states___root) := (!(next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root) = 0sh32_00000001) ? 0sh32_00000001 : next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root));
	next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_final_state_states___root) := (next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic____wakeup___) ? (next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_rlt_evtInitStep) ? next(top-impl-usr-rlt_enter_CruiseController_ModeLogic_mode_logic_rlt_state_2_states___root) : ((!next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_complete_1) & ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root) >= 0sh32_00000002) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root) <= 0sh32_00000008))) ? ((!next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_complete_3) & ((next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root) >= 0sh32_00000003) & (next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root) <= 0sh32_00000006))) ? next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_Active_rlt_state_15_states___root) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_On_rlt_state_10_states___root)) : next(top-impl-usr-rlt_eval_CruiseController_ModeLogic_mode_logic_rlt_state_4_states___root))) : next(top-impl-usr-chart_CruiseController_ModeLogic_mode_logic_begin_state_states___root));


INVARSPEC 
((top-usr-OK));

