
MODULE main () 
VAR
	voter-usr-input1 : real;
	voter-usr-input2 : real;
	voter-usr-input3 : real;
	voter-usr-output : real;
	voter-impl-usr-equalized1 : real;
	voter-impl-usr-equalized2 : real;
	voter-impl-usr-equalized3 : real;
	voter-impl-usr-equalization1 : real;
	voter-impl-usr-equalization2 : real;
	voter-impl-usr-equalization3 : real;
	voter-impl-usr-satCentering : real;
	voter-impl-usr-centering : real;
	voter-impl-usr-df1 : real;
	voter-impl-usr-df2 : real;
	voter-impl-usr-df3 : real;
	voter-impl-usr-st1 : real;
	voter-impl-usr-st2 : real;
	voter-impl-usr-st3 : real;
	voter-impl-usr-three_output : real;
	voter-impl-usr-c1 : boolean;
	voter-impl-usr-c2 : boolean;
	voter-impl-usr-c3 : boolean;
	voter-impl-usr-d1 : boolean;
	voter-impl-usr-d2 : boolean;
	voter-impl-usr-d3 : boolean;
	voter-impl-usr-eqs_stable : boolean;
	voter-impl-usr-out_stable : boolean;
	voter-res-glocal_1 : boolean;
	voter-res-glocal_2 : boolean;
	voter-res-glocal_3 : boolean;
	voter-res-glocal_4 : boolean;
	voter-res-glocal_5 : boolean;
	voter-res-glocal_6 : boolean;

ASSIGN
	init(voter-impl-usr-equalization3) := 0;
	init(voter-impl-usr-equalization2) := 0;
	init(voter-impl-usr-equalization1) := 0;
	init(voter-impl-usr-eqs_stable) := (((((voter-impl-usr-equalization1 <= 12/5 & voter-impl-usr-equalization1 >= -12/5) & voter-impl-usr-equalization2 <= 12/5) & voter-impl-usr-equalization2 >= -12/5) & voter-impl-usr-equalization3 <= 12/5) & voter-impl-usr-equalization3 >= -12/5);
	init(voter-impl-usr-d3) := (voter-impl-usr-equalization3 > voter-impl-usr-equalization1);
	init(voter-impl-usr-d2) := (voter-impl-usr-equalization2 > voter-impl-usr-equalization3);
	init(voter-impl-usr-d1) := (voter-impl-usr-equalization1 > voter-impl-usr-equalization2);
	init(voter-impl-usr-centering) := ((voter-impl-usr-d1 = voter-impl-usr-d2) ? voter-impl-usr-equalization2 : ((voter-impl-usr-d2 = voter-impl-usr-d3) ? voter-impl-usr-equalization3 : voter-impl-usr-equalization1));
	init(voter-impl-usr-satCentering) := ((voter-impl-usr-centering > 1/4) ? 1/4 : ((voter-impl-usr-centering < -1/4) ? -1/4 : voter-impl-usr-centering));
	init(voter-impl-usr-equalized3) := (voter-usr-input3 - voter-impl-usr-equalization3);
	init(voter-impl-usr-equalized1) := (voter-usr-input1 - voter-impl-usr-equalization1);
	init(voter-impl-usr-c3) := (voter-impl-usr-equalized3 > voter-impl-usr-equalized1);
	init(voter-impl-usr-equalized2) := (voter-usr-input2 - voter-impl-usr-equalization2);
	init(voter-impl-usr-c2) := (voter-impl-usr-equalized2 > voter-impl-usr-equalized3);
	init(voter-impl-usr-c1) := (voter-impl-usr-equalized1 > voter-impl-usr-equalized2);
	init(voter-impl-usr-three_output) := ((voter-impl-usr-c1 = voter-impl-usr-c2) ? voter-impl-usr-equalized2 : ((voter-impl-usr-c2 = voter-impl-usr-c3) ? voter-impl-usr-equalized3 : voter-impl-usr-equalized1));
	init(voter-impl-usr-df2) := (voter-impl-usr-equalized2 - voter-impl-usr-three_output);
	init(voter-impl-usr-st2) := ((voter-impl-usr-df2 > 1/2) ? 1/2 : ((voter-impl-usr-df2 < -1/2) ? -1/2 : voter-impl-usr-df2));
	init(voter-impl-usr-df3) := (voter-impl-usr-equalized3 - voter-impl-usr-three_output);
	init(voter-impl-usr-st3) := ((voter-impl-usr-df3 > 1/2) ? 1/2 : ((voter-impl-usr-df3 < -1/2) ? -1/2 : voter-impl-usr-df3));
	init(voter-impl-usr-df1) := (voter-impl-usr-equalized1 - voter-impl-usr-three_output);
	init(voter-impl-usr-st1) := ((voter-impl-usr-df1 > 1/2) ? 1/2 : ((voter-impl-usr-df1 < -1/2) ? -1/2 : voter-impl-usr-df1));
	init(voter-usr-output) := (voter-impl-usr-three_output / 3);
	init(voter-impl-usr-out_stable) := (-6/5 <= voter-usr-output & voter-usr-output <= 6/5);
	init(voter-res-glocal_1) := (voter-usr-input1 < 6/5);
	init(voter-res-glocal_2) := (voter-usr-input1 > -6/5);
	init(voter-res-glocal_3) := (voter-usr-input2 < 6/5);
	init(voter-res-glocal_4) := (voter-usr-input2 > -6/5);
	init(voter-res-glocal_5) := (voter-usr-input3 < 6/5);
	init(voter-res-glocal_6) := (voter-usr-input3 > -6/5);

	next(voter-impl-usr-equalization3) := voter-impl-usr-equalization3 + ((voter-impl-usr-st3 - voter-impl-usr-satCentering) * 1/20);
	next(voter-impl-usr-equalization2) := voter-impl-usr-equalization2 + ((voter-impl-usr-st2 - voter-impl-usr-satCentering) * 1/20);
	next(voter-impl-usr-equalization1) := voter-impl-usr-equalization1 + ((voter-impl-usr-st1 - voter-impl-usr-satCentering) * 1/20);
	next(voter-impl-usr-eqs_stable) := (((((next(voter-impl-usr-equalization1) <= 12/5 & next(voter-impl-usr-equalization1) >= -12/5) & next(voter-impl-usr-equalization2) <= 12/5) & next(voter-impl-usr-equalization2) >= -12/5) & next(voter-impl-usr-equalization3) <= 12/5) & next(voter-impl-usr-equalization3) >= -12/5);
	next(voter-impl-usr-d3) := (next(voter-impl-usr-equalization3) > next(voter-impl-usr-equalization1));
	next(voter-impl-usr-d2) := (next(voter-impl-usr-equalization2) > next(voter-impl-usr-equalization3));
	next(voter-impl-usr-d1) := (next(voter-impl-usr-equalization1) > next(voter-impl-usr-equalization2));
	next(voter-impl-usr-centering) := ((next(voter-impl-usr-d1) = next(voter-impl-usr-d2)) ? next(voter-impl-usr-equalization2) : ((next(voter-impl-usr-d2) = next(voter-impl-usr-d3)) ? next(voter-impl-usr-equalization3) : next(voter-impl-usr-equalization1)));
	next(voter-impl-usr-satCentering) := ((next(voter-impl-usr-centering) > 1/4) ? 1/4 : ((next(voter-impl-usr-centering) < -1/4) ? -1/4 : next(voter-impl-usr-centering)));
	next(voter-impl-usr-equalized3) := (next(voter-usr-input3) - next(voter-impl-usr-equalization3));
	next(voter-impl-usr-equalized1) := (next(voter-usr-input1) - next(voter-impl-usr-equalization1));
	next(voter-impl-usr-c3) := (next(voter-impl-usr-equalized3) > next(voter-impl-usr-equalized1));
	next(voter-impl-usr-equalized2) := (next(voter-usr-input2) - next(voter-impl-usr-equalization2));
	next(voter-impl-usr-c2) := (next(voter-impl-usr-equalized2) > next(voter-impl-usr-equalized3));
	next(voter-impl-usr-c1) := (next(voter-impl-usr-equalized1) > next(voter-impl-usr-equalized2));
	next(voter-impl-usr-three_output) := ((next(voter-impl-usr-c1) = next(voter-impl-usr-c2)) ? next(voter-impl-usr-equalized2) : ((next(voter-impl-usr-c2) = next(voter-impl-usr-c3)) ? next(voter-impl-usr-equalized3) : next(voter-impl-usr-equalized1)));
	next(voter-impl-usr-df2) := (next(voter-impl-usr-equalized2) - next(voter-impl-usr-three_output));
	next(voter-impl-usr-st2) := ((next(voter-impl-usr-df2) > 1/2) ? 1/2 : ((next(voter-impl-usr-df2) < -1/2) ? -1/2 : next(voter-impl-usr-df2)));
	next(voter-impl-usr-df3) := (next(voter-impl-usr-equalized3) - next(voter-impl-usr-three_output));
	next(voter-impl-usr-st3) := ((next(voter-impl-usr-df3) > 1/2) ? 1/2 : ((next(voter-impl-usr-df3) < -1/2) ? -1/2 : next(voter-impl-usr-df3)));
	next(voter-impl-usr-df1) := (next(voter-impl-usr-equalized1) - next(voter-impl-usr-three_output));
	next(voter-impl-usr-st1) := ((next(voter-impl-usr-df1) > 1/2) ? 1/2 : ((next(voter-impl-usr-df1) < -1/2) ? -1/2 : next(voter-impl-usr-df1)));
	next(voter-usr-output) := (next(voter-impl-usr-three_output) / 3);
	next(voter-impl-usr-out_stable) := (-6/5 <= next(voter-usr-output) & next(voter-usr-output) <= 6/5);
	next(voter-res-glocal_1) := (next(voter-usr-input1) < 6/5);
	next(voter-res-glocal_2) := (next(voter-usr-input1) > -6/5);
	next(voter-res-glocal_3) := (next(voter-usr-input2) < 6/5);
	next(voter-res-glocal_4) := (next(voter-usr-input2) > -6/5);
	next(voter-res-glocal_5) := (next(voter-usr-input3) < 6/5);
	next(voter-res-glocal_6) := (next(voter-usr-input3) > -6/5);

	INVAR voter-res-glocal_6;
	INVAR voter-res-glocal_5;
	INVAR voter-res-glocal_4;
	INVAR voter-res-glocal_3;
	INVAR voter-res-glocal_2;
	INVAR voter-res-glocal_1;

INVARSPEC 
((voter-impl-usr-eqs_stable) & (voter-impl-usr-out_stable));

