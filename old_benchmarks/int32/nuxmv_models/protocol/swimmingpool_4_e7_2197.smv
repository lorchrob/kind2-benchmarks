
MODULE swimingpool (swimingpool-usr-e1, swimingpool-usr-e2, swimingpool-usr-e3, swimingpool-usr-e4, swimingpool-usr-e5, swimingpool-usr-e6, swimingpool-usr-init_p1, swimingpool-usr-init_p2)
VAR
	swimingpool-usr-x1 : signed word[32];
	swimingpool-usr-x2 : signed word[32];
	swimingpool-usr-x3 : signed word[32];
	swimingpool-usr-x4 : signed word[32];
	swimingpool-usr-x5 : signed word[32];
	swimingpool-usr-x6 : signed word[32];
	swimingpool-usr-x7 : signed word[32];
	swimingpool-usr-p1 : signed word[32];
	swimingpool-usr-p2 : signed word[32];
	swimingpool-impl-usr-g1 : boolean;
	swimingpool-impl-usr-g2 : boolean;
	swimingpool-impl-usr-g3 : boolean;
	swimingpool-impl-usr-g4 : boolean;
	swimingpool-impl-usr-g5 : boolean;
	swimingpool-impl-usr-g6 : boolean;

ASSIGN
	init(swimingpool-usr-x1) := 0sh32_00000000;
	init(swimingpool-impl-usr-g1) := FALSE;
	init(swimingpool-usr-p1) := swimingpool-usr-init_p1;
	init(swimingpool-usr-x6) := swimingpool-usr-p1;
	init(swimingpool-impl-usr-g3) := FALSE;
	init(swimingpool-usr-x2) := 0sh32_00000000;
	init(swimingpool-impl-usr-g2) := FALSE;
	init(swimingpool-usr-p2) := swimingpool-usr-init_p2;
	init(swimingpool-usr-x7) := swimingpool-usr-p2;
	init(swimingpool-impl-usr-g5) := FALSE;
	init(swimingpool-usr-x4) := 0sh32_00000000;
	init(swimingpool-impl-usr-g4) := FALSE;
	init(swimingpool-usr-x3) := 0sh32_00000000;
	init(swimingpool-impl-usr-g6) := FALSE;
	init(swimingpool-usr-x5) := 0sh32_00000000;

	next(swimingpool-impl-usr-g2) := ((swimingpool-usr-x1 >= 0sh32_00000001) & (swimingpool-usr-x7 >= 0sh32_00000001));
	next(swimingpool-impl-usr-g1) := (swimingpool-usr-x6 >= 0sh32_00000001);
	next(swimingpool-usr-x1) := (next(swimingpool-usr-e1) ? (next(swimingpool-impl-usr-g1) ? (swimingpool-usr-x1 + 0sh32_00000001) : swimingpool-usr-x1) : (next(swimingpool-usr-e2) ? (next(swimingpool-impl-usr-g2) ? (swimingpool-usr-x1 - 0sh32_00000001) : swimingpool-usr-x1) : swimingpool-usr-x1));
	next(swimingpool-impl-usr-g6) := (swimingpool-usr-x5 >= 0sh32_00000001);
	next(swimingpool-impl-usr-g4) := ((swimingpool-usr-x3 >= 0sh32_00000001) & (swimingpool-usr-x6 >= 0sh32_00000001));
	next(swimingpool-impl-usr-g3) := (swimingpool-usr-x2 >= 0sh32_00000001);
	next(swimingpool-usr-x6) := (next(swimingpool-usr-e1) ? (next(swimingpool-impl-usr-g1) ? (swimingpool-usr-x6 - 0sh32_00000001) : swimingpool-usr-x6) : (next(swimingpool-usr-e3) ? (next(swimingpool-impl-usr-g3) ? (swimingpool-usr-x6 + 0sh32_00000001) : swimingpool-usr-x6) : (next(swimingpool-usr-e4) ? (next(swimingpool-impl-usr-g4) ? (swimingpool-usr-x6 - 0sh32_00000001) : swimingpool-usr-x6) : (next(swimingpool-usr-e6) ? (next(swimingpool-impl-usr-g6) ? (swimingpool-usr-x6 + 0sh32_00000001) : swimingpool-usr-x6) : swimingpool-usr-x6))));
	next(swimingpool-usr-p1) := swimingpool-usr-p1;
	next(swimingpool-usr-x2) := (next(swimingpool-usr-e2) ? (next(swimingpool-impl-usr-g2) ? (swimingpool-usr-x2 + 0sh32_00000001) : swimingpool-usr-x2) : (next(swimingpool-usr-e3) ? (next(swimingpool-impl-usr-g3) ? (swimingpool-usr-x2 - 0sh32_00000001) : swimingpool-usr-x2) : swimingpool-usr-x2));
	next(swimingpool-impl-usr-g5) := (swimingpool-usr-x4 >= 0sh32_00000001);
	next(swimingpool-usr-x7) := (next(swimingpool-usr-e2) ? (next(swimingpool-impl-usr-g2) ? (swimingpool-usr-x7 - 0sh32_00000001) : swimingpool-usr-x7) : (next(swimingpool-usr-e5) ? (next(swimingpool-impl-usr-g5) ? (swimingpool-usr-x7 + 0sh32_00000001) : swimingpool-usr-x7) : swimingpool-usr-x7));
	next(swimingpool-usr-p2) := swimingpool-usr-p2;
	next(swimingpool-usr-x4) := (next(swimingpool-usr-e4) ? (next(swimingpool-impl-usr-g4) ? (swimingpool-usr-x4 + 0sh32_00000001) : swimingpool-usr-x4) : (next(swimingpool-usr-e5) ? (next(swimingpool-impl-usr-g4) ? (swimingpool-usr-x4 - 0sh32_00000001) : swimingpool-usr-x4) : swimingpool-usr-x4));
	next(swimingpool-usr-x3) := (next(swimingpool-usr-e3) ? (next(swimingpool-impl-usr-g3) ? (swimingpool-usr-x3 + 0sh32_00000001) : swimingpool-usr-x3) : (next(swimingpool-usr-e4) ? (next(swimingpool-impl-usr-g4) ? (swimingpool-usr-x3 - 0sh32_00000001) : swimingpool-usr-x3) : swimingpool-usr-x3));
	next(swimingpool-usr-x5) := (next(swimingpool-usr-e5) ? (next(swimingpool-impl-usr-g5) ? (swimingpool-usr-x5 + 0sh32_00000001) : swimingpool-usr-x5) : (next(swimingpool-usr-e6) ? (next(swimingpool-impl-usr-g6) ? (swimingpool-usr-x5 - 0sh32_00000001) : swimingpool-usr-x5) : swimingpool-usr-x5));



MODULE excludes6 (excludes6-usr-X1, excludes6-usr-X2, excludes6-usr-X3, excludes6-usr-X4, excludes6-usr-X5, excludes6-usr-X6)
VAR
	excludes6-usr-excludes : boolean;

ASSIGN
	init(excludes6-usr-excludes) := ((((((!excludes6-usr-X1 & !excludes6-usr-X2) & !excludes6-usr-X3) & !excludes6-usr-X4) & !excludes6-usr-X5) & excludes6-usr-X6) | ((((((!excludes6-usr-X1 & !excludes6-usr-X2) & !excludes6-usr-X3) & !excludes6-usr-X4) & excludes6-usr-X5) & !excludes6-usr-X6) | ((((((!excludes6-usr-X1 & !excludes6-usr-X2) & !excludes6-usr-X3) & excludes6-usr-X4) & !excludes6-usr-X5) & !excludes6-usr-X6) | ((((((!excludes6-usr-X1 & !excludes6-usr-X2) & excludes6-usr-X3) & !excludes6-usr-X4) & !excludes6-usr-X5) & !excludes6-usr-X6) | ((((((!excludes6-usr-X1 & excludes6-usr-X2) & !excludes6-usr-X3) & !excludes6-usr-X4) & !excludes6-usr-X5) & !excludes6-usr-X6) | ((((((excludes6-usr-X1 & !excludes6-usr-X2) & !excludes6-usr-X3) & !excludes6-usr-X4) & !excludes6-usr-X5) & !excludes6-usr-X6) | (((((!excludes6-usr-X1 & !excludes6-usr-X2) & !excludes6-usr-X3) & !excludes6-usr-X4) & !excludes6-usr-X5) & !excludes6-usr-X6)))))));

	next(excludes6-usr-excludes) := ((((((!next(excludes6-usr-X1) & !next(excludes6-usr-X2)) & !next(excludes6-usr-X3)) & !next(excludes6-usr-X4)) & !next(excludes6-usr-X5)) & next(excludes6-usr-X6)) | ((((((!next(excludes6-usr-X1) & !next(excludes6-usr-X2)) & !next(excludes6-usr-X3)) & !next(excludes6-usr-X4)) & next(excludes6-usr-X5)) & !next(excludes6-usr-X6)) | ((((((!next(excludes6-usr-X1) & !next(excludes6-usr-X2)) & !next(excludes6-usr-X3)) & next(excludes6-usr-X4)) & !next(excludes6-usr-X5)) & !next(excludes6-usr-X6)) | ((((((!next(excludes6-usr-X1) & !next(excludes6-usr-X2)) & next(excludes6-usr-X3)) & !next(excludes6-usr-X4)) & !next(excludes6-usr-X5)) & !next(excludes6-usr-X6)) | ((((((!next(excludes6-usr-X1) & next(excludes6-usr-X2)) & !next(excludes6-usr-X3)) & !next(excludes6-usr-X4)) & !next(excludes6-usr-X5)) & !next(excludes6-usr-X6)) | ((((((next(excludes6-usr-X1) & !next(excludes6-usr-X2)) & !next(excludes6-usr-X3)) & !next(excludes6-usr-X4)) & !next(excludes6-usr-X5)) & !next(excludes6-usr-X6)) | (((((!next(excludes6-usr-X1) & !next(excludes6-usr-X2)) & !next(excludes6-usr-X3)) & !next(excludes6-usr-X4)) & !next(excludes6-usr-X5)) & !next(excludes6-usr-X6))))))));



MODULE First (First-usr-X)
VAR
	First-usr-First : signed word[32];

ASSIGN
	init(First-usr-First) := First-usr-X;
	next(First-usr-First) := First-usr-First;



MODULE Sofar (Sofar-usr-X)
VAR
	Sofar-usr-Sofar : boolean;

ASSIGN
	init(Sofar-usr-Sofar) := Sofar-usr-X;
	next(Sofar-usr-Sofar) := (Sofar-usr-Sofar | next(Sofar-usr-X));



MODULE main () 
VAR
	top-usr-e1 : boolean;
	top-usr-e2 : boolean;
	top-usr-e3 : boolean;
	top-usr-e4 : boolean;
	top-usr-e5 : boolean;
	top-usr-e6 : boolean;
	top-usr-init_p1 : signed word[32];
	top-usr-init_p2 : signed word[32];
	top-usr-OK : boolean;
	top-impl-usr-x3 : signed word[32];
	top-impl-usr-env : boolean;
	top-res-call_2 : excludes6(top-usr-e1, top-usr-e2, top-usr-e3, top-usr-e4, top-usr-e5, top-usr-e6);
	top-res-call_3 : Sofar(top-res-call_2.excludes6-usr-excludes);
	top-res-call_4 : First(top-usr-init_p1);
	top-res-call_5 : First(top-usr-init_p2);
	top-res-2-call_1 : swimingpool(top-usr-e1, top-usr-e2, top-usr-e3, top-usr-e4, top-usr-e5, top-usr-e6, top-usr-init_p1, top-usr-init_p2);

ASSIGN
	init(top-impl-usr-env) := ((((top-res-call_3.Sofar-usr-Sofar & (0sh32_00000000 <= top-res-call_4.First-usr-First)) & (0sh32_00000000 <= top-res-call_5.First-usr-First)) & (top-res-call_4.First-usr-First < 0sh32_000003E8)) & (top-res-call_5.First-usr-First < 0sh32_000003E8));
	init(top-impl-usr-x3) := top-res-2-call_1.swimingpool-usr-x3;
	init(top-usr-OK) := (top-impl-usr-env -> (top-impl-usr-x3 < 0sh32_00000001));

	next(top-impl-usr-env) := ((((next(top-res-call_3.Sofar-usr-Sofar) & (0sh32_00000000 <= next(top-res-call_4.First-usr-First))) & (0sh32_00000000 <= next(top-res-call_5.First-usr-First))) & (next(top-res-call_4.First-usr-First) < 0sh32_000003E8)) & (next(top-res-call_5.First-usr-First) < 0sh32_000003E8));
	next(top-impl-usr-x3) := next(top-res-2-call_1.swimingpool-usr-x3);
	next(top-usr-OK) := (next(top-impl-usr-env) -> (next(top-impl-usr-x3) < 0sh32_00000001));


INVARSPEC 
((top-usr-OK));

