
MODULE firefly (firefly-usr-e1, firefly-usr-e2, firefly-usr-e3, firefly-usr-e4, firefly-usr-e5, firefly-usr-e6, firefly-usr-e7, firefly-usr-e8, firefly-usr-i_invalid)
VAR
	firefly-usr-invalid : signed word[32];
	firefly-usr-dirty : signed word[32];
	firefly-usr-exclusive : signed word[32];
	firefly-usr-shared : signed word[32];
	firefly-impl-usr-garde1 : boolean;
	firefly-impl-usr-garde2 : boolean;
	firefly-impl-usr-garde3 : boolean;
	firefly-impl-usr-garde4 : boolean;
	firefly-impl-usr-garde5 : boolean;
	firefly-impl-usr-garde6 : boolean;
	firefly-impl-usr-garde7 : boolean;
	firefly-impl-usr-garde8 : boolean;
	firefly-impl-usr-mem_invalid : signed word[32];
	firefly-res-glocal_21 : signed word[32];
	firefly-res-oracle_18 : signed word[32];
	firefly-res-oracle_19 : signed word[32];
	firefly-res-oracle_20 : signed word[32];
	firefly-res-oracle_16 : signed word[32];
	firefly-res-oracle_17 : signed word[32];
	firefly-res-oracle_12 : signed word[32];
	firefly-res-oracle_13 : signed word[32];
	firefly-res-oracle_14 : signed word[32];
	firefly-res-oracle_15 : signed word[32];
	firefly-res-oracle_11 : signed word[32];
	firefly-res-oracle_10 : signed word[32];
	firefly-res-oracle_7 : signed word[32];
	firefly-res-oracle_8 : signed word[32];
	firefly-res-oracle_9 : signed word[32];
	firefly-res-oracle_5 : signed word[32];
	firefly-res-oracle_6 : signed word[32];
	firefly-res-oracle_1 : signed word[32];
	firefly-res-oracle_2 : signed word[32];
	firefly-res-oracle_3 : signed word[32];
	firefly-res-oracle_4 : signed word[32];

ASSIGN
	init(firefly-impl-usr-mem_invalid) := firefly-usr-i_invalid;
	init(firefly-usr-invalid) := firefly-impl-usr-mem_invalid;
	init(firefly-impl-usr-garde1) := ((((firefly-res-oracle_1 >= 0sh32_00000001) & (firefly-res-oracle_2 = 0sh32_00000000)) & (firefly-res-oracle_3 = 0sh32_00000000)) & (firefly-res-oracle_4 = 0sh32_00000000));
	init(firefly-usr-dirty) := 0sh32_00000000;
	init(firefly-impl-usr-garde2) := ((firefly-res-oracle_5 >= 0sh32_00000001) & (firefly-res-oracle_6 >= 0sh32_00000001));
	init(firefly-impl-usr-garde4) := (firefly-res-oracle_10 >= 0sh32_00000001);
	init(firefly-usr-exclusive) := 0sh32_00000000;
	init(firefly-impl-usr-garde3) := ((firefly-res-oracle_7 >= 0sh32_00000001) & ((firefly-res-oracle_8 + firefly-res-oracle_9) >= 0sh32_00000001));
	init(firefly-usr-shared) := 0sh32_00000000;
	init(firefly-impl-usr-garde5) := (firefly-res-oracle_11 = 0sh32_00000001);
	init(firefly-impl-usr-garde7) := ((firefly-res-oracle_16 >= 0sh32_00000001) & (firefly-res-oracle_17 >= 0sh32_00000001));
	init(firefly-impl-usr-garde8) := ((firefly-res-oracle_18 >= 0sh32_00000001) & ((firefly-res-oracle_19 + firefly-res-oracle_20) >= 0sh32_00000001));
	init(firefly-res-glocal_21) := 0sh32_00000000;
	init(firefly-impl-usr-garde6) := ((((firefly-res-oracle_12 >= 0sh32_00000001) & (firefly-res-oracle_13 = 0sh32_00000000)) & (firefly-res-oracle_14 = 0sh32_00000000)) & (firefly-res-oracle_15 = 0sh32_00000000));

	next(firefly-impl-usr-garde8) := ((firefly-usr-invalid >= 0sh32_00000001) & ((firefly-usr-shared + firefly-usr-exclusive) >= 0sh32_00000001));
	next(firefly-impl-usr-garde7) := ((firefly-usr-invalid >= 0sh32_00000001) & (firefly-usr-dirty >= 0sh32_00000001));
	next(firefly-impl-usr-garde6) := ((((firefly-usr-invalid >= 0sh32_00000001) & (firefly-usr-dirty = 0sh32_00000000)) & (firefly-usr-shared = 0sh32_00000000)) & (firefly-usr-exclusive = 0sh32_00000000));
	next(firefly-impl-usr-garde3) := ((firefly-usr-invalid >= 0sh32_00000001) & ((firefly-usr-shared + firefly-usr-exclusive) >= 0sh32_00000001));
	next(firefly-impl-usr-garde2) := ((firefly-usr-invalid >= 0sh32_00000001) & (firefly-usr-dirty >= 0sh32_00000001));
	next(firefly-impl-usr-garde1) := ((((firefly-usr-invalid >= 0sh32_00000001) & (firefly-usr-dirty = 0sh32_00000000)) & (firefly-usr-shared = 0sh32_00000000)) & (firefly-usr-exclusive = 0sh32_00000000));
	next(firefly-usr-invalid) := (next(firefly-usr-e1) ? (next(firefly-impl-usr-garde1) ? (firefly-usr-invalid - 0sh32_00000001) : firefly-usr-invalid) : (next(firefly-usr-e2) ? (next(firefly-impl-usr-garde2) ? (firefly-usr-invalid - 0sh32_00000001) : firefly-usr-invalid) : (next(firefly-usr-e3) ? (next(firefly-impl-usr-garde3) ? (firefly-usr-invalid - 0sh32_00000001) : firefly-usr-invalid) : (next(firefly-usr-e6) ? (next(firefly-impl-usr-garde6) ? (firefly-usr-invalid - 0sh32_00000001) : firefly-usr-invalid) : (next(firefly-usr-e7) ? (next(firefly-impl-usr-garde7) ? (firefly-usr-invalid - 0sh32_00000001) : firefly-usr-invalid) : (next(firefly-usr-e8) ? (next(firefly-impl-usr-garde8) ? (firefly-usr-invalid - 0sh32_00000001) : firefly-usr-invalid) : firefly-usr-invalid))))));
	next(firefly-impl-usr-garde4) := (firefly-usr-exclusive >= 0sh32_00000001);
	next(firefly-usr-dirty) := (next(firefly-usr-e2) ? (next(firefly-impl-usr-garde2) ? (firefly-usr-dirty - 0sh32_00000001) : firefly-usr-dirty) : (next(firefly-usr-e4) ? (next(firefly-impl-usr-garde4) ? (firefly-usr-dirty + 0sh32_00000001) : firefly-usr-dirty) : (next(firefly-usr-e6) ? (next(firefly-impl-usr-garde6) ? 0sh32_00000001 : firefly-usr-dirty) : (next(firefly-usr-e7) ? (next(firefly-impl-usr-garde7) ? (firefly-usr-dirty - 0sh32_00000001) : firefly-usr-dirty) : firefly-usr-dirty))));
	next(firefly-impl-usr-garde5) := (firefly-usr-shared = 0sh32_00000001);
	next(firefly-usr-exclusive) := (next(firefly-usr-e1) ? (next(firefly-impl-usr-garde1) ? (firefly-usr-exclusive + 0sh32_00000001) : firefly-usr-exclusive) : (next(firefly-usr-e3) ? (next(firefly-impl-usr-garde3) ? 0sh32_00000000 : firefly-usr-exclusive) : (next(firefly-usr-e4) ? (next(firefly-impl-usr-garde4) ? (firefly-usr-exclusive - 0sh32_00000001) : firefly-usr-exclusive) : (next(firefly-usr-e5) ? (next(firefly-impl-usr-garde5) ? (firefly-usr-exclusive + 0sh32_00000001) : firefly-usr-exclusive) : (next(firefly-usr-e8) ? (next(firefly-impl-usr-garde8) ? 0sh32_00000000 : firefly-usr-exclusive) : firefly-usr-exclusive)))));
	next(firefly-usr-shared) := (next(firefly-usr-e2) ? (next(firefly-impl-usr-garde2) ? (firefly-usr-shared + 0sh32_00000002) : firefly-usr-shared) : (next(firefly-usr-e3) ? (next(firefly-impl-usr-garde3) ? (((firefly-usr-shared - 0sh32_00000001) + firefly-usr-exclusive) + 0sh32_00000001) : firefly-usr-shared) : (next(firefly-usr-e5) ? (next(firefly-impl-usr-garde5) ? firefly-res-glocal_21 : firefly-usr-shared) : (next(firefly-usr-e7) ? (next(firefly-impl-usr-garde7) ? (firefly-usr-shared + 0sh32_00000002) : firefly-usr-shared) : (next(firefly-usr-e8) ? (next(firefly-impl-usr-garde8) ? ((firefly-usr-shared + firefly-usr-exclusive) + 0sh32_00000001) : firefly-usr-shared) : firefly-usr-shared)))));
	next(firefly-res-glocal_21) := 0sh32_00000000;
	next(firefly-impl-usr-mem_invalid) := firefly-impl-usr-mem_invalid;



MODULE excludes8 (excludes8-usr-X1, excludes8-usr-X2, excludes8-usr-X3, excludes8-usr-X4, excludes8-usr-X5, excludes8-usr-X6, excludes8-usr-X7, excludes8-usr-X8)
VAR
	excludes8-usr-excludes : boolean;

ASSIGN
	init(excludes8-usr-excludes) := ((((((((!excludes8-usr-X1 & !excludes8-usr-X2) & !excludes8-usr-X3) & !excludes8-usr-X4) & !excludes8-usr-X5) & !excludes8-usr-X6) & !excludes8-usr-X7) & excludes8-usr-X8) | ((((((((!excludes8-usr-X1 & !excludes8-usr-X2) & !excludes8-usr-X3) & !excludes8-usr-X4) & !excludes8-usr-X5) & !excludes8-usr-X6) & excludes8-usr-X7) & !excludes8-usr-X8) | ((((((((!excludes8-usr-X1 & !excludes8-usr-X2) & !excludes8-usr-X3) & !excludes8-usr-X4) & !excludes8-usr-X5) & excludes8-usr-X6) & !excludes8-usr-X7) & !excludes8-usr-X8) | ((((((((!excludes8-usr-X1 & !excludes8-usr-X2) & !excludes8-usr-X3) & !excludes8-usr-X4) & excludes8-usr-X5) & !excludes8-usr-X6) & !excludes8-usr-X7) & !excludes8-usr-X8) | ((((((((!excludes8-usr-X1 & !excludes8-usr-X2) & !excludes8-usr-X3) & excludes8-usr-X4) & !excludes8-usr-X5) & !excludes8-usr-X6) & !excludes8-usr-X7) & !excludes8-usr-X8) | ((((((((!excludes8-usr-X1 & !excludes8-usr-X2) & excludes8-usr-X3) & !excludes8-usr-X4) & !excludes8-usr-X5) & !excludes8-usr-X6) & !excludes8-usr-X7) & !excludes8-usr-X8) | ((((((((!excludes8-usr-X1 & excludes8-usr-X2) & !excludes8-usr-X3) & !excludes8-usr-X4) & !excludes8-usr-X5) & !excludes8-usr-X6) & !excludes8-usr-X7) & !excludes8-usr-X8) | ((((((((excludes8-usr-X1 & !excludes8-usr-X2) & !excludes8-usr-X3) & !excludes8-usr-X4) & !excludes8-usr-X5) & !excludes8-usr-X6) & !excludes8-usr-X7) & !excludes8-usr-X8) | (((((((!excludes8-usr-X1 & !excludes8-usr-X2) & !excludes8-usr-X3) & !excludes8-usr-X4) & !excludes8-usr-X5) & !excludes8-usr-X6) & !excludes8-usr-X7) & !excludes8-usr-X8)))))))));

	next(excludes8-usr-excludes) := ((((((((!next(excludes8-usr-X1) & !next(excludes8-usr-X2)) & !next(excludes8-usr-X3)) & !next(excludes8-usr-X4)) & !next(excludes8-usr-X5)) & !next(excludes8-usr-X6)) & !next(excludes8-usr-X7)) & next(excludes8-usr-X8)) | ((((((((!next(excludes8-usr-X1) & !next(excludes8-usr-X2)) & !next(excludes8-usr-X3)) & !next(excludes8-usr-X4)) & !next(excludes8-usr-X5)) & !next(excludes8-usr-X6)) & next(excludes8-usr-X7)) & !next(excludes8-usr-X8)) | ((((((((!next(excludes8-usr-X1) & !next(excludes8-usr-X2)) & !next(excludes8-usr-X3)) & !next(excludes8-usr-X4)) & !next(excludes8-usr-X5)) & next(excludes8-usr-X6)) & !next(excludes8-usr-X7)) & !next(excludes8-usr-X8)) | ((((((((!next(excludes8-usr-X1) & !next(excludes8-usr-X2)) & !next(excludes8-usr-X3)) & !next(excludes8-usr-X4)) & next(excludes8-usr-X5)) & !next(excludes8-usr-X6)) & !next(excludes8-usr-X7)) & !next(excludes8-usr-X8)) | ((((((((!next(excludes8-usr-X1) & !next(excludes8-usr-X2)) & !next(excludes8-usr-X3)) & next(excludes8-usr-X4)) & !next(excludes8-usr-X5)) & !next(excludes8-usr-X6)) & !next(excludes8-usr-X7)) & !next(excludes8-usr-X8)) | ((((((((!next(excludes8-usr-X1) & !next(excludes8-usr-X2)) & next(excludes8-usr-X3)) & !next(excludes8-usr-X4)) & !next(excludes8-usr-X5)) & !next(excludes8-usr-X6)) & !next(excludes8-usr-X7)) & !next(excludes8-usr-X8)) | ((((((((!next(excludes8-usr-X1) & next(excludes8-usr-X2)) & !next(excludes8-usr-X3)) & !next(excludes8-usr-X4)) & !next(excludes8-usr-X5)) & !next(excludes8-usr-X6)) & !next(excludes8-usr-X7)) & !next(excludes8-usr-X8)) | ((((((((next(excludes8-usr-X1) & !next(excludes8-usr-X2)) & !next(excludes8-usr-X3)) & !next(excludes8-usr-X4)) & !next(excludes8-usr-X5)) & !next(excludes8-usr-X6)) & !next(excludes8-usr-X7)) & !next(excludes8-usr-X8)) | (((((((!next(excludes8-usr-X1) & !next(excludes8-usr-X2)) & !next(excludes8-usr-X3)) & !next(excludes8-usr-X4)) & !next(excludes8-usr-X5)) & !next(excludes8-usr-X6)) & !next(excludes8-usr-X7)) & !next(excludes8-usr-X8))))))))));



MODULE First (First-usr-X)
VAR
	First-usr-First : signed word[32];

ASSIGN
	init(First-usr-First) := First-usr-X;
	next(First-usr-First) := First-usr-First;



MODULE Sofar (Sofar-usr-X)
VAR
	Sofar-usr-Sofar : boolean;

ASSIGN
	init(Sofar-usr-Sofar) := Sofar-usr-X;
	next(Sofar-usr-Sofar) := (Sofar-usr-Sofar | next(Sofar-usr-X));



MODULE main () 
VAR
	top-usr-e1 : boolean;
	top-usr-e2 : boolean;
	top-usr-e3 : boolean;
	top-usr-e4 : boolean;
	top-usr-e5 : boolean;
	top-usr-e6 : boolean;
	top-usr-e7 : boolean;
	top-usr-e8 : boolean;
	top-usr-i_invalid : signed word[32];
	top-usr-OK : boolean;
	top-impl-usr-invalid : signed word[32];
	top-impl-usr-dirty : signed word[32];
	top-impl-usr-exclusive : signed word[32];
	top-impl-usr-shared : signed word[32];
	top-impl-usr-env : boolean;
	top-impl-usr-procs : signed word[32];
	top-res-glocal_27 : signed word[32];
	top-res-gklocal_24 : boolean;
	top-res-call_26 : First(top-usr-i_invalid);
	top-res-call_23 : excludes8(top-usr-e1, top-usr-e2, top-usr-e3, top-usr-e4, top-usr-e5, top-usr-e6, top-usr-e7, top-usr-e8);
	top-res-call_25 : Sofar(top-res-gklocal_24);
	top-res-2-call_22 : firefly(top-usr-e1, top-usr-e2, top-usr-e3, top-usr-e4, top-usr-e5, top-usr-e6, top-usr-e7, top-usr-e8, top-usr-i_invalid);
	top-res-poracle_1 : signed word[32];
	top-res-poracle_2 : signed word[32];
	top-res-poracle_3 : signed word[32];
	top-res-poracle_4 : signed word[32];
	top-res-poracle_5 : signed word[32];
	top-res-poracle_6 : signed word[32];
	top-res-poracle_7 : signed word[32];
	top-res-poracle_8 : signed word[32];
	top-res-poracle_9 : signed word[32];
	top-res-poracle_10 : signed word[32];
	top-res-poracle_11 : signed word[32];
	top-res-poracle_12 : signed word[32];
	top-res-poracle_13 : signed word[32];
	top-res-poracle_14 : signed word[32];
	top-res-poracle_15 : signed word[32];
	top-res-poracle_16 : signed word[32];
	top-res-poracle_17 : signed word[32];
	top-res-poracle_18 : signed word[32];
	top-res-poracle_19 : signed word[32];
	top-res-poracle_20 : signed word[32];

ASSIGN
	init(top-res-gklocal_24) := ((top-res-call_23.excludes8-usr-excludes & (top-usr-i_invalid >= 0sh32_00000000)) & (top-usr-i_invalid < 0sh32_00000005));
	init(top-impl-usr-procs) := top-res-call_26.First-usr-First;
	init(top-impl-usr-env) := top-res-call_25.Sofar-usr-Sofar;
	init(top-impl-usr-shared) := top-res-2-call_22.firefly-usr-shared;
	init(top-impl-usr-exclusive) := top-res-2-call_22.firefly-usr-exclusive;
	init(top-impl-usr-dirty) := top-res-2-call_22.firefly-usr-dirty;
	init(top-impl-usr-invalid) := top-res-2-call_22.firefly-usr-invalid;
	init(top-usr-OK) := (top-impl-usr-env -> (((((((top-impl-usr-invalid + top-impl-usr-dirty) + top-impl-usr-exclusive) + top-impl-usr-shared) = top-res-call_26.First-usr-First) & ((((top-impl-usr-invalid + top-impl-usr-dirty) + top-impl-usr-exclusive) + top-impl-usr-shared) <= top-impl-usr-procs)) & (top-impl-usr-invalid >= 0sh32_00000000)) & (top-impl-usr-invalid <= top-impl-usr-procs)));
	init(top-res-glocal_27) := (((top-impl-usr-invalid + top-impl-usr-dirty) + top-impl-usr-exclusive) + top-impl-usr-shared);

	next(top-res-gklocal_24) := ((next(top-res-call_23.excludes8-usr-excludes) & (next(top-usr-i_invalid) >= 0sh32_00000000)) & (next(top-usr-i_invalid) < 0sh32_00000005));
	next(top-impl-usr-procs) := next(top-res-call_26.First-usr-First);
	next(top-impl-usr-env) := next(top-res-call_25.Sofar-usr-Sofar);
	next(top-impl-usr-shared) := next(top-res-2-call_22.firefly-usr-shared);
	next(top-impl-usr-exclusive) := next(top-res-2-call_22.firefly-usr-exclusive);
	next(top-impl-usr-dirty) := next(top-res-2-call_22.firefly-usr-dirty);
	next(top-impl-usr-invalid) := next(top-res-2-call_22.firefly-usr-invalid);
	next(top-usr-OK) := (next(top-impl-usr-env) -> ((((((((next(top-impl-usr-invalid) + next(top-impl-usr-dirty)) + next(top-impl-usr-exclusive)) + next(top-impl-usr-shared)) = top-res-glocal_27) & ((((next(top-impl-usr-invalid) + next(top-impl-usr-dirty)) + next(top-impl-usr-exclusive)) + next(top-impl-usr-shared)) = next(top-res-call_26.First-usr-First))) & ((((next(top-impl-usr-invalid) + next(top-impl-usr-dirty)) + next(top-impl-usr-exclusive)) + next(top-impl-usr-shared)) <= next(top-impl-usr-procs))) & (next(top-impl-usr-invalid) >= 0sh32_00000000)) & (next(top-impl-usr-invalid) <= next(top-impl-usr-procs))));
	next(top-res-glocal_27) := (((next(top-impl-usr-invalid) + next(top-impl-usr-dirty)) + next(top-impl-usr-exclusive)) + next(top-impl-usr-shared));


INVARSPEC 
((top-usr-OK));

